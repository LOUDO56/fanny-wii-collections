// fs.readFile('./wiitdb.xml', 'utf8', (err, data) => {
// 	let listGames = []
// 	if (err) {
// 		console.error(err);
// 		return;
// 	}

// 	const parser = new xml2js.Parser();
// 	parser.parseString(data, (err, result) => {
// 		if (err) {
// 			console.error(err);
// 			return;
// 		}
// 		data = result.datafile.game
// 		data.forEach(Games => {
// 			const region = Games.region[0]
// 			const en_title = Games.locale[0].title[0]
// 			const language = Games.languages[0]
// 			const type = Games.type[0];
// 			if(type === "" && region === "NTSC-J" && !en_title.toLowerCase().includes("(demo)") &&
// 			(language.includes("JA"))){
// 				let title = Games.locale[0].title[0] && Games.locale[0].title[0] ? Games.locale[0].title[0] : "";
// 				let isTitleAlreadyPresent = listGames.some(game => game.locale[0].title[0].toLowerCase() === title.toLowerCase());
// 				if (!isTitleAlreadyPresent) {
// 					listGames.push(Games)
// 					const id = Games.id[0];
// 					const day = Games.date[0].$.day;
// 					const month = Games.date[0].$.month;
// 					const year = Games.date[0].$.year;
// 					const genres = Games.genre && Games.genre[0] ? Games.genre[0] : "";
// 					const developer = Games.developer && Games.developer[0] ? Games.developer[0] : ""
// 					const synopsis = Games.locale[0].synopsis && Games.locale[0].synopsis[0] ? Games.locale[0].synopsis[0] : ""
// 					// db.run(`INSERT INTO gamelist VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`, [
// 					// 	id, 
// 					// 	title,
// 					// 	day,
// 					// 	month,
// 					// 	year,
// 					// 	genres,
// 					// 	developer,
// 					// 	synopsis,
// 					// 	false,
// 					// 	0
// 					// ], 
					
// 					// (err) => {
// 					// 	if (err) return console.error("Erro during inserting id to database: ", err.message);
// 					// });
// 				}

				
// 			}

// 		})
		
// 	});

// 	console.log(listGames)

// });
